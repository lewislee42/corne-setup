/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        tmux_leader: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(B)>;
            label = "NEW_MACRO";
        };

        tmux_create_window: move_to_window_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tmux_leader &kp C>;
            label = "MOVE_TO_WINDOW_2";
        };

        tmux_delete_window: move_to_window_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tmux_leader &kp LS(AMPERSAND)>;
            label = "MOVE_TO_WINDOW_3";
        };

        tmux_next_window: move_to_window_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tmux_leader &kp N>;
            label = "MOVE_TO_WINDOW_4";
        };

        tmux_prev_window: move_to_window_5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tmux_leader &kp P>;
            label = "MOVE_TO_WINDOW_5";
        };

        tmux_close: move_to_window_6 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tmux_leader &kp D>;
            label = "MOVE_TO_WINDOW_6";
        };

        tmux_split_hori: move_to_window_7 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tmux_leader &kp MINUS>;
            label = "MOVE_TO_WINDOW_7";
        };

        tmux_split_vert: move_to_window_8 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tmux_leader &kp PIPE>;
            label = "MOVE_TO_WINDOW_8";
        };

        screen_shot: screen_shot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_COMMAND &kp LS(NUMBER_4)>;
            label = "SCREEN_SHOT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE      &kp Q  &kp W  &kp E     &kp R      &kp T          &kp Y        &kp U          &kp I      &kp O    &kp P     &kp BSLH
&kp LEFT_SHIFT  &kp A  &kp S  &kp D     &kp F      &kp G          &kp H        &kp J          &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z  &kp X  &kp C     &kp V      &kp B          &kp N        &kp M          &kp COMMA  &kp DOT  &kp FSLH  &none
                              &kp LGUI  &lt 1 TAB  &lt 2 SPACE    &lt 3 ENTER  &kp BACKSPACE  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE        &kp N1    &kp N2        &kp N3            &kp N4     &kp N5         &kp N6       &kp N7         &kp N8    &kp N9     &kp N0   &trans
&kp LEFT_SHIFT    &kp HOME  &screen_shot  &trans            &trans     &trans         &kp LEFT     &kp DOWN       &kp UP    &kp RIGHT  &trans   &trans
&kp LEFT_CONTROL  &kp F1    &kp F2        &kp F3            &kp F4     &kp F5         &kp F6       &kp F7         &kp F8    &kp F9     &kp F10  &trans
                                          &kp LEFT_COMMAND  &lt 1 TAB  &lt 2 SPACE    &lt 3 ENTER  &kp BACKSPACE  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE        &kp EXCL  &kp AT  &kp HASH  &kp DLLR   &kp PRCNT      &kp CARET         &kp AMPS           &kp ASTRK       &kp LPAR   &kp RPAR   &trans
&kp LEFT_SHIFT    &trans    &trans  &trans    &trans     &trans         &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp UNDERSCORE  &kp PLUS   &kp GRAVE  &trans
&kp LEFT_CONTROL  &trans    &trans  &trans    &trans     &trans         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp MINUS       &kp EQUAL  &kp TILDE  &trans
                                    &kp LGUI  &lt 1 TAB  &lt 2 SPACE    &lt 3 ENTER       &kp BACKSPACE      &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&kp ESC    &kp C_BRI_DEC  &kp C_BRI_INC  &trans    &trans     &trans         &kp C_PREVIOUS  &kp C_PP       &kp C_NEXT  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP
&kp LSHFT  &trans         &trans         &trans    &trans     &trans         &trans          &trans         &trans      &trans      &trans        &trans
&kp LCTRL  &trans         &trans         &trans    &trans     &trans         &trans          &trans         &trans      &trans      &trans        &trans
                                         &kp LGUI  &lt 1 TAB  &lt 2 SPACE    &lt 3 ENTER     &kp BACKSPACE  &kp RALT
            >;
        };
    };
};
